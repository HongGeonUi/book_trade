name: Java CI with Gradle

on:
  push:
    branches:
      - feature/*
      - main/*
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make docker-compose.yml
        run: |
          touch .docker-compose.yml
          echo ${{ secrets.DOCKER_COMPOSE }} | base64 -d > ./docker-compose.yml
          cat ./docker-compose.yml
        shell: bash

      - name: Start docker-compose.yml
        run: docker-compose up -d
        working-directory: ${{ github.workspace }}

      - name: Make application-test.yml
        run: |
          cd ./src/test/resources
          touch ./application.yml
          echo ${{ secrets.PROPERTIES_TEST }} | base64 -d > ./application.yml
          cat ./application.yml
        shell: bash

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Build With Gradle
        run: ./gradlew build -x test

      - name: Build with Test
        run: ./gradlew test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml